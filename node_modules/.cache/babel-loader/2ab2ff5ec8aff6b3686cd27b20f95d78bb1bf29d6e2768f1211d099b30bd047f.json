{"ast":null,"code":"var _jsxFileName = \"C:\\\\created1\\\\FSD\\\\contact-management\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, TablePagination, Container, Typography, Button, Box } from \"@mui/material\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsTable from \"./components/ContactsTable\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [formOpen, setFormOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalContacts, setTotalContacts] = useState(0);\n  const fetchContacts = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/contacts\", {\n        params: {\n          page,\n          limit: rowsPerPage,\n          search: searchQuery\n        }\n      });\n      setContacts(response.data.data);\n      setTotalContacts(response.data.total);\n    } catch (error) {\n      console.error(\"Error fetching contacts:\", error);\n    }\n  };\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage + 1);\n    fetchContacts();\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(1);\n    fetchContacts();\n  };\n  const handleSearch = e => {\n    setSearchQuery(e.target.value);\n    fetchContacts();\n  };\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  const handleAddContact = async contact => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/contacts\", contact);\n      setContacts([...contacts, response.data]);\n    } catch (error) {\n      console.error(\"Error adding contact:\", error);\n    }\n  };\n  const handleEditContact = async updatedContact => {\n    try {\n      const response = await axios.put(`http://localhost:3001/contacts/${updatedContact.id}`, updatedContact);\n      setContacts(contacts.map(contact => contact.id === updatedContact.id ? response.data : contact));\n      setSelectedContact(null);\n      setFormOpen(false);\n    } catch (error) {\n      console.error(\"Error editing contact:\", error);\n    }\n  };\n  const handleDeleteContact = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/contacts/${id}`);\n      setContacts(contacts.filter(contact => contact.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting contact:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      backgroundColor: '#e0ecde',\n      borderRadius: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      align: \"center\",\n      sx: {\n        fontWeight: 'bold',\n        color: '#2c6975',\n        backgroundColor: '#cde0c9',\n        padding: 2,\n        borderRadius: 5\n      },\n      gutterBottom: true,\n      children: \"Contact Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => setFormOpen(true),\n        sx: {\n          backgroundColor: '#68b5a0',\n          '&:hover': {\n            backgroundColor: '#2c6975'\n          },\n          borderRadius: 5\n        },\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search Contacts\",\n        variant: \"outlined\",\n        value: searchQuery,\n        onChange: handleSearch,\n        fullWidth: true,\n        sx: {\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderColor: '#2c6975'\n            },\n            '&:hover fieldset': {\n              borderColor: '#68b5a0'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactsTable, {\n      contacts: contacts,\n      onEdit: contact => {\n        setSelectedContact(contact);\n        setFormOpen(true);\n      },\n      onDelete: handleDeleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: totalContacts,\n      page: page - 1,\n      onPageChange: handlePageChange,\n      rowsPerPage: rowsPerPage,\n      onRowsPerPageChange: handleRowsPerPageChange,\n      sx: {\n        backgroundColor: '#cde0c9',\n        color: '#2c6975'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), formOpen && /*#__PURE__*/_jsxDEV(ContactForm, {\n      contact: selectedContact,\n      onSave: contact => selectedContact ? handleEditContact(contact) : handleAddContact(contact),\n      onClose: () => {\n        setFormOpen(false);\n        setSelectedContact(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1m3dAPbn/+3GktCmtyAOnRbjY7A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TextField","TablePagination","Container","Typography","Button","Box","ContactForm","ContactsTable","axios","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","selectedContact","setSelectedContact","formOpen","setFormOpen","searchQuery","setSearchQuery","page","setPage","rowsPerPage","setRowsPerPage","totalContacts","setTotalContacts","fetchContacts","response","get","params","limit","search","data","total","error","console","handlePageChange","event","newPage","handleRowsPerPageChange","parseInt","target","value","handleSearch","e","handleAddContact","contact","post","handleEditContact","updatedContact","put","id","map","handleDeleteContact","delete","filter","sx","backgroundColor","borderRadius","children","variant","align","fontWeight","color","padding","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","onClick","label","onChange","fullWidth","borderColor","onEdit","onDelete","component","count","onPageChange","onRowsPerPageChange","onSave","onClose","_c","$RefreshReg$"],"sources":["C:/created1/FSD/contact-management/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, TablePagination, Container, Typography, Button, Box } from \"@mui/material\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsTable from \"./components/ContactsTable\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [formOpen, setFormOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalContacts, setTotalContacts] = useState(0);\n\n  const fetchContacts = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/contacts\", {\n        params: {\n          page,\n          limit: rowsPerPage,\n          search: searchQuery,\n        },\n      });\n      setContacts(response.data.data);\n      setTotalContacts(response.data.total);\n    } catch (error) {\n      console.error(\"Error fetching contacts:\", error);\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage + 1);\n    fetchContacts();\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(1);\n    fetchContacts();\n  };\n\n  const handleSearch = (e) => {\n    setSearchQuery(e.target.value);\n    fetchContacts();\n  };\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  const handleAddContact = async (contact) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/contacts\", contact);\n      setContacts([...contacts, response.data]);\n    } catch (error) {\n      console.error(\"Error adding contact:\", error);\n    }\n  };\n\n  const handleEditContact = async (updatedContact) => {\n    try {\n      const response = await axios.put(\n        `http://localhost:3001/contacts/${updatedContact.id}`,\n        updatedContact\n      );\n      setContacts(\n        contacts.map((contact) =>\n          contact.id === updatedContact.id ? response.data : contact\n        )\n      );\n      setSelectedContact(null);\n      setFormOpen(false);\n    } catch (error) {\n      console.error(\"Error editing contact:\", error);\n    }\n  };\n\n  const handleDeleteContact = async (id) => {\n    try {\n      await axios.delete(`http://localhost:3001/contacts/${id}`);\n      setContacts(contacts.filter((contact) => contact.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting contact:\", error);\n    }\n  };\n\n  return (\n    <Container sx={{ backgroundColor: '#e0ecde', borderRadius: 5 }}>\n      <Typography\n        variant=\"h2\"\n        align=\"center\"\n        sx={{\n          fontWeight: 'bold',\n          color: '#2c6975',\n          backgroundColor: '#cde0c9',\n          padding: 2,\n          borderRadius: 5\n        }}\n        gutterBottom\n      >\n        Contact Management\n      </Typography>\n      <Box mb={2}>\n        <Button\n          variant=\"contained\"\n          onClick={() => setFormOpen(true)}\n          sx={{\n            backgroundColor: '#68b5a0',\n            '&:hover': { backgroundColor: '#2c6975' },\n            borderRadius: 5\n          }}\n        >\n          Add Contact\n        </Button>\n      </Box>\n      <Box mb={2}>\n        <TextField\n          label=\"Search Contacts\"\n          variant=\"outlined\"\n          value={searchQuery}\n          onChange={handleSearch}\n          fullWidth\n          sx={{\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: '#2c6975',\n              },\n              '&:hover fieldset': {\n                borderColor: '#68b5a0',\n              },\n            }\n          }}\n        />\n      </Box>\n\n      <ContactsTable\n        contacts={contacts}\n        onEdit={(contact) => {\n          setSelectedContact(contact);\n          setFormOpen(true);\n        }}\n        onDelete={handleDeleteContact}\n      />\n      <TablePagination\n        component=\"div\"\n        count={totalContacts}\n        page={page - 1}\n        onPageChange={handlePageChange}\n        rowsPerPage={rowsPerPage}\n        onRowsPerPageChange={handleRowsPerPageChange}\n        sx={{\n          backgroundColor: '#cde0c9',\n          color: '#2c6975'\n        }}\n      />\n\n      {formOpen && (\n        <ContactForm\n          contact={selectedContact}\n          onSave={(contact) =>\n            selectedContact ? handleEditContact(contact) : handleAddContact(contact)\n          }\n          onClose={() => {\n            setFormOpen(false);\n            setSelectedContact(null);\n          }}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}